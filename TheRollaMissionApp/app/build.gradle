apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-allopen'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

def secretPropertiesFile = rootProject.file("secret.properties")
def secretProperties = new Properties()
secretProperties.load(new FileInputStream(secretPropertiesFile))

allOpen {
    // allows mocking for classes w/o directly opening them for release builds
    annotation 'com.project.therollamissionapp.testing.OpenClass'
}
android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion "29.0.3"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    defaultConfig {
        applicationId "com.project.therollamissionapp"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.project.therollamissionapp.util.MissionTestRunner"

        buildConfigField("String", "API_USER", secretProperties['API_USER'])
        buildConfigField("String", "API_PASS", secretProperties['API_PASS'])
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    sourceSets {
        androidTest.java.srcDirs += "src/test-common/java"
        test.java.srcDirs += "src/test-common/java"
    }

    testOptions.unitTests {
        includeAndroidResources = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.core:core-ktx:$androidXCoreKtxVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentKtxVersion"
    implementation "androidx.constraintlayout:constraintlayout:$androidXConstraintLayoutVersion"
    implementation "androidx.legacy:legacy-support-v4:$androidXLegacySupport"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    androidTestImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    androidTestImplementation "androidx.test:rules:$androidXTestRulesVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"
    androidTestImplementation "org.robolectric:annotations:$robolectricVersion"
    androidTestImplementation "org.hamcrest:hamcrest-library:$hamcrestVersion"
    androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"
    androidTestImplementation "org.mockito:mockito-android:$mockitoAndroidVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"

    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"

    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycleVersion"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycleVersion"

    testImplementation "junit:junit:$junitVersion"
    testImplementation "androidx.test.ext:junit:$androidXTestExtKotlinRunnerVersion"
    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    testImplementation "androidx.room:room-testing:$roomVersion"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"

    implementation "com.google.android.material:material:$materialVersion"

    implementation "com.github.gcacace:signature-pad:$signaturePadVersion"

    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    implementation "com.github.bumptech.glide:glide:$glideVersion"

    implementation "androidx.fragment:fragment-testing:$fragmentVersion"
    implementation "androidx.fragment:fragment:$fragmentVersion"

    implementation "com.github.Ibotta:Supported-Picker-Dialogs:$datePickerVersion"

    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
}
